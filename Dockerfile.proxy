FROM golang:1.24-alpine AS builder

# 작업 디렉토리 설정
WORKDIR /workspace

# Go 모듈 파일들을 먼저 복사하여 의존성을 캐싱합니다.
COPY go.mod go.sum ./
RUN go mod download

# 전체 소스 코드를 복사합니다.
COPY . .

# cmd/proxy 디렉토리의 main.go 파일을 리눅스 환경용 실행 파일로 빌드합니다.
# CGO_ENABLED=0은 외부 C 라이브러리 의존성 없이 순수 Go 코드로만 빌드하라는 의미입니다.
RUN CGO_ENABLED=0 GOOS=linux go build -o /workspace/proxy ./cmd/proxy/main.go


# --- 2단계: 최종 실행 환경 ---
# 매우 가벼운 Alpine Linux 이미지에서 시작합니다.
FROM alpine:3.16

# CA 인증서를 설치합니다 (HTTPS 통신 등에 필요).
RUN apk add --no-cache ca-certificates

# 빌드 환경에서 만들어진 실행 파일만 최종 이미지로 복사합니다.
# 이렇게 하면 Go 컴파일러 등 불필요한 파일이 포함되지 않아 이미지가 매우 가벼워집니다.
COPY --from=builder /workspace/proxy /proxy

# 컨테이너가 시작될 때 /proxy 실행 파일을 실행하도록 설정합니다.
CMD ["/proxy"]